version: '3.8'

x-airflow-common:
  &airflow-common
  env_file: .env
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME: admin
    AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD: admin
    PYTHONPATH: /opt/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./include:/opt/airflow/include
    - ./scripts:/opt/airflow/scripts #추가
    - ./requirements.txt:/requirements.txt
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: >
      bash -c "
        pip install --no-cache-dir -r /requirements.txt &&
        airflow db migrate &&
        airflow users create \
          --username admin \
          --password admin \
          --firstname 슈슈 \
          --lastname 사수 \
          --role Admin \
          --email admin@example.com
      "

  webserver:
    <<: *airflow-common
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: webserver

  scheduler:
    <<: *airflow-common
    build:
      context: .
      dockerfile: Dockerfile
    command: scheduler

volumes:
  postgres_data: